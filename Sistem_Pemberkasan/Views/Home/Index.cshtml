@model Sistem_Pemberkasan.Models.HomeVM.Index
@{
    ViewData["Title"] = "Dashboard";
}

<div class="row">
    <div class="col-12">
        <div class="page-title-box d-sm-flex align-items-center justify-content-between">
            <h2 class="mb-sm-0">Dashboard</h2>
            <div class="page-title-right">
                @Html.DropDownListFor(x => x.SelectedYear, new SelectList(Enumerable.Range(2000, DateTime.Now.Year - 1999).ToList()), new { @class = "form-select mb-3", aria_label = ".form-select-lg example", id = "selectedYear" })
            </div>
        </div>
    </div>
</div>

<div class="row g-lg-3">

    <!-- Card 1 -->
    <div class="col-lg">
        <div class="card card-animate bg-warning">
            <div class="card-body text-start p-3">
                <p class="text-uppercase fw-medium text-light mb-0 fs-6">Total Draft Berkas</p>
                <div class="d-flex justify-content-between align-items-end">
                    <div class="border border-light border-3  border-opacity-75 rounded py-2 px-3 mt-3">
                        <i class="ri-draft-line fs-1 text-white"></i>
                    </div>
                    <div class="text-center">
                        <h3 class="counter-value fs-1 text-white" data-target="@Model.TotalDraft"></h3>

                        <div>
                            @if (ViewContext.HttpContext.User.IsInRole("Pengelola") || ViewContext.HttpContext.User.IsInRole("Perekam"))
                            {
                                <a href="@Url.Action("Index","Draft")" class="text-decoration-underline text-light col-3">View all</a>
                            }
                            else
                            {
                                <a href="#" class="text-decoration-underline text-light col-3"></a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- end card body -->

    <!-- Card 2 -->
    <div class="col-lg">
        <div class="card card-animate bg-success ">
            <div class="card-body text-start p-3">
                <p class="text-uppercase fw-medium text-light mb-0 fs-6">Total Berkas Belum Direvisi</p>
                <div class="d-flex justify-content-between align-items-end">
                    <div class="border border-light border-3 border-opacity-75 rounded py-2 px-3 mt-3">
                        <i class="ri-folder-line fs-1 text-white"></i>
                    </div>
                    <div class="text-center">
                        <h3 class="counter-value fs-1 text-white" data-target="@Model.TotalSudahDirevisi"></h3>

                        <div>
                            @if (ViewContext.HttpContext.User.IsInRole("Pengelola") || ViewContext.HttpContext.User.IsInRole("Perekam"))
                            {
                                <a href="@Url.Action("Index","Draft")" class="text-decoration-underline text-light col-3">View all</a>
                            }
                            else
                            {
                                <a href="#" class="text-decoration-underline text-light col-3"></a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- end card body 

    <!-- Card 3 -->
    <div class="col-lg">
        <div class="card card-animate bg-secondary ">
            <div class="card-body text-start p-3">
                <p class="text-uppercase fw-medium text-light mb-0 fs-6">Total Berkas Sudah Direvisi</p>
                <div class="d-flex justify-content-between align-items-end">
                    <div class="border border-light border-3 border-opacity-75 rounded py-2 px-3 mt-3">
                        <i class="ri-folder-line fs-1 text-white"></i>
                    </div>
                    <div class="text-center">
                        <h3 class="counter-value fs-1 text-white" data-target="@Model.TotalBelumDirevisi"></h3>

                        <div>
                            @if (ViewContext.HttpContext.User.IsInRole("Pengelola") || ViewContext.HttpContext.User.IsInRole("Perekam"))
                            {
                                <a href="@Url.Action("Index","Draft")" class="text-decoration-underline text-light col-3">View all</a>
                            }
                            else
                            {
                                <a href="#" class="text-decoration-underline text-light col-3"></a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- end card body -->

    <!-- Card 4 -->
    <div class="col-lg">
        <div class="card card-animate bg-danger ">
            <div class="card-body text-start p-3">
                <p class="text-uppercase fw-medium text-light mb-0 fs-6">Total Berkas Tersimpan</p>
                <div class="d-flex justify-content-between align-items-end">
                    <div class="border border-light border-3 border-opacity-75 rounded py-2 px-3 mt-3">
                        <i class="ri-folder-line fs-1 text-white"></i>
                    </div>
                    <div class="text-center">
                        <h3 class="counter-value fs-1 text-white" data-target="@Model.TotalTersimpan"></h3>

                        <div>
                            @if (ViewContext.HttpContext.User.IsInRole("Pengelola") || ViewContext.HttpContext.User.IsInRole("Perekam"))
                            {
                                <a href="@Url.Action("Index","Monitoring")" class="text-decoration-underline text-light col-3">View all</a>
                            }
                            else
                            {
                                <a href="#" class="text-decoration-underline text-light col-3"></a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- end card body -->

    <!-- Card 5 -->
    <div class="col-lg">
        <div class="card card-animate bg-info">
            <div class="card-body text-start p-3">
                <p class="text-uppercase fw-medium text-light mb-0 fs-6">Total Berkas Saat Ini</p>
                <div class="d-flex justify-content-between align-items-end">
                    <div class="border border-light border-3 border-opacity-75 rounded py-2 px-3 mt-3">
                        <i class="ri-folders-line fs-1 text-white"></i>
                    </div>
                    <div class="text-center">
                        <h3 class="counter-value fs-1 text-white me-2" data-target="@Model.Total"></h3>
                    </div>
                </div>
            </div>
        </div>
    </div>
        <!-- end card body -->
</div>

<div class="row">
    <div class="col container-fluid">
        <div class="card ">
            <div class="card-body">
                <div class="mx-2" id="bidangChart"></div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="card m-auto" style="width: 98%">
        <div class="card-body">
            <div id="blokchart" class="chart-container"></div>
        </div>
    </div>
</div>

<div class="row mt-4">
    @foreach (var item in Model.BidangList)
    {
        <div class="col-lg-6">
            <div class="card rounded-3">
                <div class="card-header">
                    <h4>@(item.NamaBidang)</h4>
                </div>
                <div class="card-body d-flex flex-column">
                    <!-- Striped Rows -->
                    <div class="table-responsive flex-grow-1">
                        <table id="tbl" class=" table table-striped table-hover table-bordered">
                            <thead class="table-primary text-center align-middle">
                                <tr>
                                    <th scope="col">No</th>
                                    <th scope="col">Kategori</th>
                                    <th scope="col">Draft</th>
                                    <th scope="col">Belum Direvisi</th>
                                    <th scope="col">Sudah Direvisi</th>
                                    <th scope="col">Tersimpan</th>
                                    <th scope="col">Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var (kat, index) in item.MKategoriBerkas.Select((value, i) => (value, i + 1)))
                                {
                                    <tr>
                                        <td class="text-center">@index</td>
                                        <td>@(kat.JenisKategoriBerkas)</td>
                                        <td class="text-center">@kat.Berkas.Count(x => x.StatusBerkas == 1)</td>
                                        <td class="text-center">@kat.Berkas.Count(x => x.StatusBerkas == 3)</td>
                                        <td class="text-center">@kat.Berkas.Count(x => x.StatusBerkas == 4)</td>
                                        <td class="text-center">@kat.Berkas.Count(x => x.StatusBerkas == 2)</td>
                                        <td class="text-center">@kat.Berkas.Count(x => x.StatusBerkas != 0)</td>
                                    </tr>
                                }
                                <tr>
                                    <td colspan="6" class="text-center">
                                        <h5>Total Seluruh Berkas</h5>
                                    </td>
                                    <td class="text-center">
                                        <h5>
                                            @(item.MKategoriBerkas.Sum(kat => kat.Berkas.Count(x => x.StatusBerkas != 0)))
                                        </h5>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#selectedYear').change(function () {
                var selectedYear = $(this).val();
                $.ajax({
                    url: '/Home/UpdateSelectedYear',
                    type: 'POST',
                    data: { selectedYear: selectedYear },
                    success: function (response) {
                        // Handle response jika diperlukan
                        console.log('Selected year updated');
                        // Refresh halaman setelah berhasil memperbarui SelectedYear
                        window.location.reload();
                    },
                    error: function () {
                        console.error('Failed to update selected year');
                    }
                });
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('#dashActive').addClass(' active');
        });
    </script>
    
    <script>

        $(document).ready(function () {
            // Memuat data dari controller menggunakan Ajax
            $.ajax({
                url: '/Home/GetChartData',
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    // Definisikan opsi grafik dengan menggunakan data yang diperoleh
                    var options = {
                        series: data.series,
                        chart: {
                            height: 350,
                            type: 'bar', // Mengubah tipe chart menjadi 'bar' untuk chart balok
                            zoom: {
                                enabled: false
                            }
                        },
                        plotOptions: {
                            bar: {
                                horizontal: false,
                                columnWidth: '50%',
                                endingShape: 'rounded'
                            }
                        },
                        stroke: {
                            show: true,
                            width: 2,
                            colors: ['transparent']
                        },
                        fill: {
                            opacity: 1
                        },
                        title: {
                            text: 'Berkas Terupload PerBulan',
                            align: 'left'
                        },
                        xaxis: {
                            categories: data.categories,
                        }
                    };

                    // Inisialisasi dan render grafik menggunakan opsi yang telah didefinisikan
                    var chart = new ApexCharts(document.querySelector("#blokchart"), options);
                    chart.render();
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching data:', error);
                }
            });

            // bidangChart
            var bidangCh = {
                chart: {
                    height: 350,
                    type: 'bar'
                },
                plotOptions: {
                    bar: {
                        horizontal: false
                    }
                },
                title: {
                    text: 'Total Berkas Berdasarkan Bidang',
                    align: 'left'
                },
                series: [{
                    data: [
                        @foreach (var item in Model.BidangList)
                        {
                            <text>
                                {
                                    x: '@item.Singkatan',
                                    y: @(item.MKategoriBerkas.Sum(kat => kat.Berkas.Count(x => x.StatusBerkas != 0)))
                                },
                            </text>
                        }
                    ]
                }]
            };

            var chartB = new ApexCharts(document.querySelector("#bidangChart"), bidangCh);
            chartB.render();
            // EndbidangChart

        });
    </script>
}



